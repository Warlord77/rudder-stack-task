from flask import Flask, request, jsonify
import requests
import json
import os
from dotenv import load_dotenv

load_dotenv()

app = Flask(__name__)

SLACK_WEBHOOK_URL = os.getenv('SLACK_WEBHOOK_URL')
PROMETHEUS_URL = os.getenv('PROMETHEUS_URL')

def enrich_data(alert):
    enriched_data = {}
    enriched_data['cpu_usage'] = '75%'
    enriched_data['memory_usage'] = '60%'
    response = requests.get(f'{PROMETHEUS_URL}/data')
    if response.status_code == 200:
        enriched_data['prometheus_data'] = response.json()
    enriched_data['heap_dump'] = 'Heap dump data example'
    alert['enriched_data'] = enriched_data
    return alert

def send_to_slack(alert):
    message = (f"Alert: {alert['labels']['alertname']} - {alert['annotations']['summary']}\n"
               f"Details: {alert['annotations']['description']}\n"
               f"Enriched Data: {alert['enriched_data']}")
    slack_data = {'text': message}
    response = requests.post(SLACK_WEBHOOK_URL, data=json.dumps(slack_data), headers={'Content-Type': 'application/json'})
    if response.status_code != 200:
        raise ValueError(f"Request to Slack returned an error {response.status_code}, the response is:\n{response.text}")

    if alert['labels']['severity'] == 'CRITICAL':
        critical_message = f"CRITICAL ALERT: Immediate attention required for {alert['labels']['alertname']}!"
        slack_data = {'text': critical_message}
        response = requests.post(SLACK_WEBHOOK_URL, data=json.dumps(slack_data), headers={'Content-Type': 'application/json'})
        if response.status_code != 200:
            raise ValueError(f"Request to Slack returned an error {response.status_code}, the response is:\n{response.text}")

@app.route('/webhook', methods=['POST'])
def webhook():
    alert = request.json
    # Step 1: Enrich the alert data
    alert = enrich_data(alert)
    # Step 2: Take action (send to Slack)
    send_to_slack(alert)
    return jsonify({"status": "success"}), 200

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
